#include "main.h"

struct _schedule schedule;


void Loop_1000Hz(void)	//1ms执行一次
{
//	as5048_read_angle();
	as5048_singelread_angle();
	as5048_data_prepare();
}

void Loop_500Hz(void)	 //2ms执行一次
{
}

void Loop_200Hz(void)	 //5ms执行一次
{
	vec2int16 set_val,fb_val,result;
	set_val.data[0] = 400;
	fb_val.data[0] = as5048.speed_ef;
			TDT_Friction_PidControl(&set_val,&fb_val,&result,0.05,2);
	    TIM1->CCR1 = result.data[0];
}

void Loop_100Hz(void)  //10ms执行一次
{
//	Chassis_Concrol();
}

void Loop_50Hz(void)	//20ms执行一次
{
//  get_key();
}

void Loop_20Hz(void)	//50ms执行一次
{
    static u8 timer_50ms = 0;//记录50ms次数
    if(++timer_50ms > 10)
    {
        timer_50ms = 0;
//		 LED_OFF;
        LED_TOGGLE;
    }
}

void Loop_10Hz(void)	//100ms执行一次
{

}

void Loop(void)
{
    if(schedule.cnt_1ms >= 1)
    {
        Loop_1000Hz();
        schedule.cnt_1ms = 0;
    }
    if(schedule.cnt_2ms >= 2)
    {
        Loop_500Hz();
        schedule.cnt_2ms = 0;
    }
    if(schedule.cnt_5ms >= 5)
    {
        Loop_200Hz();
        schedule.cnt_5ms = 0;
    }
    if(schedule.cnt_10ms >= 10)
    {
        Loop_100Hz();
        schedule.cnt_10ms = 0;
    }
    if(schedule.cnt_20ms >= 20)
    {
        Loop_50Hz();
        schedule.cnt_20ms = 0;
    }
    if(schedule.cnt_50ms >= 50)
    {
        Loop_20Hz();
        schedule.cnt_50ms = 0;
    }
    if(schedule.cnt_100ms >= 100)
    {
        Loop_10Hz();
        schedule.cnt_100ms = 0;
    }
}
