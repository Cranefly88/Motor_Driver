#include "main.h"
as5048_t as5048;
void AS5048_Init(void)
{
    GPIO_InitTypeDef GPIO_InitStructure;
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(GPIOA,&GPIO_InitStructure);
    AS5048_CS_HIGH;
}
    int16_t pRxData;

int as5048_read_angle(void)
{
		uint16_t receive_buffer;
    // 写数据 读数据
    AS5048_CS_LOW;
    pRxData= SPI1_ReadWrite16Bit(AS5048_ANGLE)>>13;
    AS5048_CS_HIGH;
//    delay_us(20);
    AS5048_CS_LOW;
		receive_buffer = SPI1_ReadWrite16Bit(AS5048_ANGLE);
    AS5048_CS_HIGH;
//    delay_us(20);
    AS5048_CS_LOW;
		receive_buffer = SPI1_ReadWrite16Bit(0xc001);
    AS5048_CS_HIGH;
//    delay_us(20);
	
    as5048.reg = receive_buffer&0x3fff;
		as5048.ef = (receive_buffer&0x4000)>>13;
	
    return 1;
}

int as5048_singelread_angle(void)
{
    // 写数据 读数据
//		int16_t receive_buffer;
	
    AS5048_CS_LOW;
		as5048.reg = (uint16_t)(SPI1_ReadWrite16Bit(AS5048_ANGLE)&0x3fff);
    AS5048_CS_HIGH;
	
//    as5048.reg = (int16_t)(receive_buffer&0x3fff);
//		as5048.ef = (receive_buffer&0x4000)>>13;
	
    return 1;
}

void as5048_data_prepare(void)
{
	static int pos_last = 0,cnt = 0;
	static long long pos_sum_last=0;
	if(as5048.reg - pos_last <-4000)
		cnt ++;
	if(as5048.reg - pos_last >4000)
		cnt --;
	as5048.pos_sum = as5048.reg + 8192*cnt;
	
	as5048.speed = as5048.pos_sum - pos_sum_last;
	as5048.speed_ef = LPF2pApply_1(as5048.speed);
	pos_last = as5048.reg;
	pos_sum_last = as5048.pos_sum;
}


